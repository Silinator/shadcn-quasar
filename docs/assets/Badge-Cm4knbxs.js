import{d as o,a as l,w as i,n as r,u as t,o as d,b as m}from"./iframe-CcFA4uLv.js";import{a as p,c}from"./utils-CiSxPhq7.js";import{P as u}from"./Primitive-BaDlL3t_.js";const n=p("bg-primary text-primary-foreground relative inline-flex min-h-3 items-center px-1.5 py-0.5 text-xs",{variants:{outline:{true:"text-primary border border-current bg-transparent",false:""},rounded:{true:"rounded-full",false:"rounded-md"},transparent:{true:"opacity-80",false:""},floating:{true:"absolute -top-1 right-[-3px] cursor-[inherit]",false:""},multiLine:{true:"wrap-break-word break-all",false:"whitespace-nowrap"},align:{top:"align-top",middle:"align-middle",bottom:"align-bottom"}},defaultVariants:{outline:!1,rounded:!1,transparent:!1,floating:!1,multiLine:!1,align:"middle"}});n.__docgenInfo={exportName:"badgeVariants",displayName:"badgeVariants",type:2,props:[{name:"outline",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]}},{name:"rounded",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]}},{name:"transparent",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]}},{name:"floating",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]}},{name:"multiLine",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]}},{name:"align",global:!1,description:"",tags:[],required:!1,type:'"middle" | "top" | "bottom"',declarations:[],schema:{kind:"enum",type:'"middle" | "top" | "bottom"',schema:['"middle"','"top"','"bottom"']}},{name:"class",global:!0,description:"",tags:[],required:!1,type:"ClassValue",declarations:[],schema:{kind:"enum",type:"ClassValue",schema:["string","number","bigint","false","true",{kind:"array",type:"ClassArray"},"ClassDictionary"]}},{name:"className",global:!1,description:"",tags:[],required:!1,type:"ClassValue",declarations:[],schema:{kind:"enum",type:"ClassValue",schema:["string","number","bigint","false","true",{kind:"array",type:"ClassArray"},"ClassDictionary"]}}],events:[],slots:[],exposed:[],sourceFiles:"D:/Side Projects/shadcn-quasar/src/components/ui/badge/index.ts"};const f=o({__name:"Badge",props:{outline:{type:Boolean,default:!1},rounded:{type:Boolean,default:!1},transparent:{type:Boolean,default:!1},floating:{type:Boolean,default:!1},multiLine:{type:Boolean,default:!1},align:{default:"middle"},class:{},asChild:{type:Boolean,default:!1},as:{default:"div"}},setup(s){const a=s;return(e,y)=>(d(),l(t(u),{as:a.as,asChild:a.asChild,class:r(t(c)(t(n)({outline:e.outline,rounded:e.rounded,transparent:e.transparent,floating:e.floating,multiLine:e.multiLine,align:e.align}),a.class))},{default:i(()=>[m(e.$slots,"default")]),_:3},8,["as","asChild","class"]))}});f.__docgenInfo={exportName:"default",displayName:"Badge",type:1,props:[{name:"rounded",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]},default:"false"},{name:"asChild",global:!1,description:`Change the default rendered element for the one passed as a child, merging their props and behavior.\r
\r
Read our [Composition](https://www.reka-ui.com/docs/guides/composition) guide for more details.`,tags:[],required:!1,type:"boolean",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]},default:"false"},{name:"as",global:!1,description:"The element or component this component should render as. Can be overwritten by `asChild`.",tags:[{name:"defaultValue",text:'"div"'}],required:!1,type:"string",declarations:[],schema:"string",default:'"div"'},{name:"outline",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]},default:"false"},{name:"align",global:!1,description:"",tags:[],required:!1,type:'"middle" | "top" | "bottom"',declarations:[],schema:{kind:"enum",type:'"middle" | "top" | "bottom"',schema:['"middle"','"top"','"bottom"']},default:'"middle"'},{name:"transparent",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]},default:"false"},{name:"floating",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]},default:"false"},{name:"multiLine",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]},default:"false"},{name:"class",global:!0,description:"",tags:[],required:!1,type:"any",declarations:[],schema:"any"},{name:"key",global:!0,description:"",tags:[],required:!1,type:"PropertyKey",declarations:[],schema:{kind:"enum",type:"PropertyKey",schema:["string","number","symbol"]}},{name:"ref",global:!0,description:"",tags:[],required:!1,type:"VNodeRef",declarations:[],schema:{kind:"enum",type:"VNodeRef",schema:["string","Ref<any, any>",{kind:"event",type:"(ref: Element | ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>, ... 4 more ..., any>, refs: Record<...>): void"}]}},{name:"ref_for",global:!0,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]}},{name:"ref_key",global:!0,description:"",tags:[],required:!1,type:"string",declarations:[],schema:"string"},{name:"style",global:!0,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"}],events:[],slots:[{name:"default",type:"{}",description:"",declarations:[],schema:{kind:"object",type:"{}"}}],exposed:[{name:"rounded",type:"boolean",description:"",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]}},{name:"asChild",type:"boolean",description:`Change the default rendered element for the one passed as a child, merging their props and behavior.\r
\r
Read our [Composition](https://www.reka-ui.com/docs/guides/composition) guide for more details.`,declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]}},{name:"as",type:"string",description:"The element or component this component should render as. Can be overwritten by `asChild`.",declarations:[],schema:"string"},{name:"outline",type:"boolean",description:"",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]}},{name:"align",type:'"middle" | "top" | "bottom"',description:"",declarations:[],schema:{kind:"enum",type:'"middle" | "top" | "bottom"',schema:['"middle"','"top"','"bottom"']}},{name:"transparent",type:"boolean",description:"",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]}},{name:"floating",type:"boolean",description:"",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]}},{name:"multiLine",type:"boolean",description:"",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]}},{name:"class",type:"any",description:"",declarations:[],schema:"any"}],sourceFiles:"D:/Side Projects/shadcn-quasar/src/components/ui/badge/Badge.vue"};export{f as _};
